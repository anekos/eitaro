
use clap::*;



pub fn build() -> App<'static, 'static> {
    app_from_crate!()
        .subcommand(SubCommand::with_name("interactive")
                    .alias("i")
                    .alias("shell")
                    .about("Interactive shell")
                    .arg(Arg::with_name("prompt")
                         .help("Prompt text")
                         .short("p")
                         .long("prompt")
                         .takes_value(true)))
        .subcommand(SubCommand::with_name("build")
                    .alias("b")
                    .about("Build dictionary")
                    .arg(Arg::with_name("format")
                         .help("Dictionary format")
                         .short("f")
                         .long("format")
                         .takes_value(true))
                    .arg(Arg::with_name("dictionary-file")
                         .required(true)
                         .min_values(1)))
        .subcommand(SubCommand::with_name("export")
                    .about("Export"))
        .subcommand(SubCommand::with_name("lemmatize")
                    .alias("lem")
                    .alias("lm")
                    .about("Lemmatize")
                    .arg(Arg::with_name("word")
                         .help("Word")
                         .required(true)))
        .subcommand(SubCommand::with_name("lookup")
                    .alias("l")
                    .about("Lookup")
                    .arg(Arg::with_name("word")
                         .help("Word")
                         .required(true)))
        .subcommand(SubCommand::with_name("html")
                    .alias("h")
                    .about("Output HTML fragment")
                    .arg(Arg::with_name("word")
                         .help("Word")
                         .required(true)))
        .subcommand(SubCommand::with_name("server")
                    .alias("s")
                    .about("HTTP Server")
                    .arg(Arg::with_name("curses")
                         .help("Use curses")
                         .short("c")
                         .long("curses"))
                    .arg(Arg::with_name("ignore")
                         .help("Ignore not found")
                         .short("i")
                         .long("ignore"))
                    .arg(Arg::with_name("print")
                         .help("Prints results to stdout")
                         .short("p")
                         .long("print"))
                    .arg(Arg::with_name("kuru")
                         .help("Enable kuru-kuru head")
                         .short("k")
                         .long("kuru"))
                    .arg(Arg::with_name("bind-to")
                         .help("host:port to listen")
                         .required(false)))
}
